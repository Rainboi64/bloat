{"version":3,"sources":["demos/landscape/sketch.js"],"names":["cols","rows","scl","w","h","t","terrain","setup","createCanvas","WEBGL","x","y","draw","yoff","xoff","map","noise","background","Math","sin","cos","translate","rotateX","PI","rotateZ","beginShape","TRIANGLE_STRIP","fill","sqrt","vertex","endShape"],"mappings":";AAAA,IAAIA,EAAMC,EACNC,EAAM,GACNC,EAAI,IACJC,EAAI,IAEJC,EAAI,EAEJC,EAAU,GAEd,SAASC,IACPC,aAAa,IAAM,IAAMC,OACzBT,EAAOG,EAAID,EAAM,GACjBD,EAAOG,EAAIF,EAAM,GAEZ,IAAA,IAAIQ,EAAI,EAAGA,EAAIV,EAAMU,IAAK,CAC7BJ,EAAQI,GAAK,GACR,IAAA,IAAIC,EAAI,EAAGA,EAAIV,EAAMU,IACxBL,EAAQI,GAAGC,GAAK,GAKtB,SAASC,IAGF,IADDC,IAAAA,EADJR,GAAK,GAEIM,EAAI,EAAGA,EAAIV,EAAMU,IAAK,CAExB,IADDG,IAAAA,EAAO,EACFJ,EAAI,EAAGA,EAAIV,EAAMU,IACxBJ,EAAQI,GAAGC,GAAKI,IAAIC,MAAMF,EAAMD,GAAO,EAAG,GAAI,IAAK,KACnDC,GAAQ,GAEVD,GAAQ,GAGVI,WAAyB,IAAdC,KAAKC,IAAId,GAAwB,IAAda,KAAKE,IAAIf,GAAwB,IAAda,KAAKC,IAAId,GAAW,GACrEgB,UAAU,EAAG,IACbC,QAAQC,GAAK,GACbC,QAAQD,GAAKL,KAAKC,IAAId,EAAI,KAC1BgB,WAAWlB,EAAI,GAAIC,EAAI,GAClB,IAAIO,EAAI,EAAGA,EAAIV,EAAO,EAAGU,IAAK,CACjCc,WAAWC,gBACN,IAAIhB,EAAI,EAAGA,EAAIV,EAAMU,IACxBiB,KAAMhB,EAAIT,EAAO,IAAMS,EAAIT,EAAO,GAAI,IAAK,GAAK0B,KAAKlB,EAAIC,IACzDkB,OAAOnB,EAAIR,EAAKS,EAAIT,EAAKI,EAAQI,GAAGC,IACpCkB,OAAOnB,EAAIR,GAAMS,EAAI,GAAKT,EAAKI,EAAQI,GAAGC,EAAI,IAEhDmB","file":"sketch.550b1c74.js","sourceRoot":"..","sourcesContent":["var cols, rows;\nvar scl = 20;\nvar w = 1000;\nvar h = 1000;\n\nvar t = 0;\n\nvar terrain = [];\n\nfunction setup() {\n  createCanvas(1000, 1000, WEBGL);\n  cols = w / scl + 10;\n  rows = h / scl + 10;\n\n  for (var x = 0; x < cols; x++) {\n    terrain[x] = [];\n    for (var y = 0; y < rows; y++) {\n      terrain[x][y] = 0;\n    }\n  }\n}\n\nfunction draw() {\n  t -= 0.1;\n  var yoff = t;\n  for (var y = 0; y < rows; y++) {\n    var xoff = 0;\n    for (var x = 0; x < cols; x++) {\n      terrain[x][y] = map(noise(xoff, yoff), 0, 1, -100, 100);\n      xoff += 0.2;\n    }\n    yoff += 0.2;\n  }\n\n  background(Math.sin(t) * 255, Math.cos(t) * 255, Math.sin(t) * 255 + 2);\n  translate(0, 50);\n  rotateX(PI / 3);\n  rotateZ(PI * Math.sin(t / 50));\n  translate(-w / 2, -h / 2);\n  for (var y = 0; y < rows - 1; y++) {\n    beginShape(TRIANGLE_STRIP);\n    for (var x = 0; x < cols; x++) {\n      fill((y / scl) * 200, (y / scl) * 40, 200, 20 * sqrt(x + y));\n      vertex(x * scl, y * scl, terrain[x][y]);\n      vertex(x * scl, (y + 1) * scl, terrain[x][y + 1]);\n    }\n    endShape();\n  }\n}\n"]}